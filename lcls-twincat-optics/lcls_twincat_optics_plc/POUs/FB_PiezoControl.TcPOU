<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_PiezoControl" Id="{0c3d171e-6759-449c-9e69-236d43fd29fc}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PiezoControl
VAR_IN_OUT
    iq_Piezo	:	ST_PiezoAxis;
END_VAR
VAR_INPUT
    xExecute	:	BOOL; //Rising edge being piezo motion
    xReset      :   BOOL;
    Enable_Positive : BOOL; //Reverse of Positive Limit Switch
    Enable_Negative : BOOL; //Reverse of Negative Limit Switch
END_VAR
VAR_OUTPUT
    xBusy	:	BOOL; //Busy remains true while piezo position is being adjusted
    xDone	:	BOOL; //Reached target position
    xError	:	BOOL; //General error
    xLimited:	BOOL; //Piezo move was limited
END_VAR
VAR
    E_State     : E_PiezoControl; //ENUM for Piezo Control State
    rtStartMove : R_TRIG; //Rising Trigger for Execution
    rtReset     : R_TRIG; //Rising Trigger for Error reset
    rSetpoint   : REAL;   //Internal Storage of Setpoint
    rReqVoltage	:	LREAL; //requested voltage
    rLLSV: LREAL := 0;
    rHLSV: LREAL := 120;
    fbPI: FB_CTRL_PI;
    fbRamp: FB_CTRL_RAMP_GENERATOR_EXT;
    // FB initialized flag
    bInitialized: BOOL;
    //Get cycle time for control FBs
    fbGetCycleTime	:	FB_CTRL_GET_TASK_CYCLETIME;
    tTaskCycleTime: TIME;
    bCycleTimeValid: BOOL;
    rtVoltMode: R_TRIG;
    fOut: LREAL;
    fPiezoBias: LREAL := 60;
    fScale: LREAL := -60;
    tonPiezoDone: TON := (PT:=T#2S);
    tonPiezoLimited: TON := (PT:=T#500MS);
    xVoltageLimited: BOOL;
    ftEnPos	:	F_TRIG;
    ftEnNeg	:	F_TRIG;
    rtEnPos	:	R_TRIG;
    rtEnNeg	:	R_TRIG;
    fOutLimitHolder	:	LREAL; //holds the limit value until restored
    fOutHiLimHolder	:	LREAL; //holds the limit value until restored
    fOutLoLimHolder	:	LREAL; //holds the limit value until restored
    xFirstPass 	: 	BOOL := TRUE;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[// FB Piezo Control

//Triggers
///////////////////////////////
    rtStartMove(CLK:=xExecute);
    rtReset(CLK:=iq_Piezo.xEnable);
    rtVoltMode(CLK:=iq_Piezo.xVoltageMode);

//Status bits
///////////////////////////
xBusy S= rtStartMove.Q;
xDone R= rtStartMove.Q;

//Keep requested voltage to within limits
iq_Piezo.rReqVoltage := LIMIT(iq_Piezo.LowerVoltage, iq_Piezo.rReqVoltage, iq_Piezo.UpperVoltage);

//Limits
(* These appear flipped, but in-fact are not *)
ftEnPos(CLK:=Enable_Positive);
ftEnNeg(CLK:=Enable_Negative);
rtEnPos(CLK:=Enable_Positive);
rtEnNeg(CLK:=Enable_Negative);
IF xFirstPass THEN
    //Want to hold the limits on first pass if a switch is hit.
    (* When we move off the limit, we'll restore the init value (usually 1). This will be reset
    to something less than 1 when the limit gets tripped again, because presumably the actual limit
    would have been set at a value < 1 if the system had been runing.
    We just need to hold the init value to make it past this edge case that is present at startup. *)
    IF NOT Enable_Positive THEN fOutHiLimHolder := iq_Piezo.stPIParams.fOutMaxLimit; END_IF
    IF NOT Enable_Negative THEN fOutLoLimHolder := iq_Piezo.stPIParams.fOutMinLimit; END_IF
ELSE
    IF ftEnPos.Q THEN
        rLLSV := iq_Piezo.rSetVoltage;
        fOutHiLimHolder := iq_Piezo.stPIParams.fOutMaxLimit;
        iq_Piezo.stPIParams.fOutMaxLimit := fbPI.fOut;
    ELSIF rtEnPos.Q THEN
        rLLSV := iq_Piezo.LowerVoltage;
        iq_Piezo.stPIParams.fOutMaxLimit := fOutHiLimHolder;
    END_IF

    IF ftEnNeg.Q THEN
        rHLSV := iq_Piezo.rSetVoltage;

        fOutLoLimHolder := iq_Piezo.stPIParams.fOutMinLimit;
        iq_Piezo.stPIParams.fOutMinLimit := fbPI.fOut;
    ELSIF rtEnNeg.Q THEN
        rHLSV := iq_Piezo.UpperVoltage;
        iq_Piezo.stPIParams.fOutMinLimit := fOutLoLimHolder;
    END_IF
END_IF

// Don't do anything until we're ready
IF bInitialized THEN
    // While the block is working, a new position may be requested, this is OK
    IF xBusy THEN
        fbPI.fSetpointValue := iq_Piezo.rReqAbsPos;
    END_IF

    (* The next chunk of code prevents the PI block from winding up.
        First, when the PI block begins to request a voltage that is
        beyond the permitted range (this range is affected by the state
        of limit switches/ or enable fwd/bwd), we latch the requested position.
        Presumeably this position request  *)

    //Select the PI block control mode
    ////////////////////////////////////////
    IF iq_Piezo.xVoltageMode THEN
        //Set PI block to idle
        fbPI.eMode := eCTRL_MODE_PASSIVE;
        rReqVoltage := iq_Piezo.rReqVoltage; //TODO add a ramp
    ELSE
        IF iq_Piezo.xIdleMode THEN
            rReqVoltage := fScale * 0 + fPiezoBias;

            fbPI.eMode := eCTRL_MODE_MANUAL;
            ACT_Controller();
            fbPI.bHold := TRUE;
        ELSE
            //Fout is connected to the piezo voltage control
            rReqVoltage := fScale * fbPI.fOut + fPiezoBias;
            fbPI.bHold := FALSE;
            //Control mode is always active, so compensation takes over more smoothly
            fbPI.eMode := eCTRL_MODE_ACTIVE;
        END_IF

    END_IF

    ACT_Controller();

    xVoltageLimited := rLLSV > rReqVoltage OR rHLSV < rReqVoltage;

    //This is where the voltage request gets sent to the piezo driver
    iq_Piezo.rSetVoltage := LIMIT(rLLSV, rReqVoltage, rHLSV);

//Initialization
ELSE
    fbGetCycleTime( eMode   := eCTRL_MODE_ACTIVE,
                tTaskCycleTime => tTaskCycleTime,
                bCycleTimeValid => bCycleTimeValid);
    IF bCycleTimeValid THEN
        iq_Piezo.stPIParams.tTaskCycleTime := tTaskCycleTime;
        iq_Piezo.stPIParams.tCtrlCycleTime := tTaskCycleTime;
        bInitialized	:= TRUE;
    END_IF

END_IF

tonPiezoDone.IN := WithinRange(ValA:=iq_Piezo.rActPos, Center:=iq_Piezo.rReqAbsPos, Range:=iq_Piezo.rPiezoDmovRange, Offset:=0)
                    AND NOT rtStartMove.Q; //rtStartMove interrupts the timer, resetting it
tonPiezoDone();

tonPiezoLimited.IN := (fbPI.bARWactive OR xVoltageLimited) AND NOT rtStartMove.Q;
tonPiezoLimited();

xDone S= xBusy AND (tonPiezoDone.Q OR tonPiezoLimited.Q);
xLimited := tonPiezoLimited.Q;

xBusy R= xDone;

xFirstPass := FALSE;]]></ST>
    </Implementation>
    <Action Name="ACT_CheckLimits" Id="{ac675dbf-d018-4e50-bca8-f98ca804bbef}">
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Controller" Id="{00f90f5a-58c3-4ffb-935c-94819ab21a7d}">
      <Implementation>
        <NWL>
          <XmlArchive>
            <Data>
              <o xml:space="preserve" t="NWLImplementationObject">
                <v n="NetworkListComment">""</v>
                <v n="DefaultViewMode">"Fbd"</v>
                <l2 n="NetworkList" cet="Network">
                  <o>
                    <v n="ILActive">false</v>
                    <v n="FBDValid">false</v>
                    <v n="ILValid">false</v>
                    <l2 n="ILLines" />
                    <v n="Comment">""</v>
                    <v n="Title">""</v>
                    <v n="Label">""</v>
                    <v n="OutCommented">false</v>
                    <l2 n="NetworkItems" cet="BoxTreeAssign">
                      <o>
                        <o n="OutputItems" t="OutputItemList">
                          <l2 n="OutputItems" cet="Operand">
                            <o>
                              <v n="Operand">"fOut"</v>
                              <v n="Type">"LREAL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">true</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">26L</v>
                            </o>
                          </l2>
                        </o>
                        <o n="Flags" t="Flags">
                          <v n="Flags">0</v>
                          <v n="Fixed">false</v>
                          <v n="Extensible">false</v>
                        </o>
                        <o n="RValue" t="BoxTreeBox">
                          <v n="BoxType">"FB_CTRL_PI"</v>
                          <o n="Instance" t="Operand">
                            <v n="Operand">"fbPI"</v>
                            <v n="Type">"FB_CTRL_PI"</v>
                            <v n="Comment">""</v>
                            <v n="SymbolComment">""</v>
                            <v n="Address">""</v>
                            <o n="Flags" t="Flags">
                              <v n="Flags">0</v>
                              <v n="Fixed">false</v>
                              <v n="Extensible">false</v>
                            </o>
                            <v n="LValue">false</v>
                            <v n="Boolean">false</v>
                            <v n="IsInstance">true</v>
                            <v n="Id">2L</v>
                          </o>
                          <o n="OutputItems" t="OutputItemList">
                            <l2 n="OutputItems" cet="Operand">
                              <n />
                              <o>
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">true</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">4L</v>
                              </o>
                              <o>
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">true</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">5L</v>
                              </o>
                              <o>
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">true</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">6L</v>
                              </o>
                              <o>
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">true</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">7L</v>
                              </o>
                            </l2>
                          </o>
                          <o n="Flags" t="Flags">
                            <v n="Flags">0</v>
                            <v n="Fixed">true</v>
                            <v n="Extensible">false</v>
                          </o>
                          <n n="InputFlags" />
                          <l2 n="InputItems">
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">9L</v>
                              </o>
                              <v n="Id">8L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">"iq_Piezo.rActPos"</v>
                                <v n="Type">"LREAL"</v>
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">11L</v>
                              </o>
                              <v n="Id">10L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">"0"</v>
                                <v n="Type">"INT"</v>
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">13L</v>
                              </o>
                              <v n="Id">12L</v>
                            </o>
                            <o t="BoxTreeBox">
                              <v n="BoxType">"OR"</v>
                              <o n="Instance" t="Operand">
                                <n n="Operand" />
                                <v n="Type">""</v>
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">false</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">true</v>
                                <v n="Id">14L</v>
                              </o>
                              <o n="OutputItems" t="OutputItemList">
                                <l2 n="OutputItems">
                                  <n />
                                </l2>
                              </o>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">true</v>
                                <v n="Extensible">false</v>
                              </o>
                              <l2 n="InputFlags" cet="Flags">
                                <o>
                                  <v n="Flags">1</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <o>
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                              </l2>
                              <l2 n="InputItems" cet="BoxTreeOperand">
                                <o>
                                  <o n="Operand" t="Operand">
                                    <v n="Operand">"iq_Piezo.xIdleMode"</v>
                                    <v n="Type">"BOOL"</v>
                                    <v n="Comment">""</v>
                                    <v n="SymbolComment">""</v>
                                    <v n="Address">""</v>
                                    <o n="Flags" t="Flags">
                                      <v n="Flags">0</v>
                                      <v n="Fixed">true</v>
                                      <v n="Extensible">false</v>
                                    </o>
                                    <v n="LValue">false</v>
                                    <v n="Boolean">false</v>
                                    <v n="IsInstance">false</v>
                                    <v n="Id">17L</v>
                                  </o>
                                  <v n="Id">16L</v>
                                </o>
                                <o>
                                  <o n="Operand" t="Operand">
                                    <v n="Operand">"rtVoltMode.Q"</v>
                                    <v n="Type">"BOOL"</v>
                                    <v n="Comment">""</v>
                                    <v n="SymbolComment">""</v>
                                    <v n="Address">""</v>
                                    <o n="Flags" t="Flags">
                                      <v n="Flags">0</v>
                                      <v n="Fixed">true</v>
                                      <v n="Extensible">false</v>
                                    </o>
                                    <v n="LValue">false</v>
                                    <v n="Boolean">false</v>
                                    <v n="IsInstance">false</v>
                                    <v n="Id">19L</v>
                                  </o>
                                  <v n="Id">18L</v>
                                </o>
                              </l2>
                              <o n="InputParam" t="ParamList">
                                <l2 n="Names" />
                                <l2 n="Types" />
                              </o>
                              <o n="OutputParam" t="ParamList">
                                <l2 n="Names" cet="String">
                                  <v></v>
                                </l2>
                                <l2 n="Types" cet="String">
                                  <v></v>
                                </l2>
                              </o>
                              <v n="CallType" t="Operator">Or</v>
                              <n n="EN" />
                              <n n="ENO" />
                              <n n="STSnippet" />
                              <v n="ContainsExtensibleInputs">false</v>
                              <v n="ProvidesSTSnippet">false</v>
                              <v n="Id">15L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">21L</v>
                              </o>
                              <v n="Id">20L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">""</v>
                                <n n="Type" />
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">23L</v>
                              </o>
                              <v n="Id">22L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">"iq_Piezo.stPIParams"</v>
                                <v n="Type">"ST_CTRL_PI_PARAMS"</v>
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">true</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">25L</v>
                              </o>
                              <v n="Id">24L</v>
                            </o>
                          </l2>
                          <o n="InputParam" t="ParamList">
                            <l2 n="Names" cet="String">
                              <v>fSetpointValue</v>
                              <v>fActualValue</v>
                              <v>fManSyncValue</v>
                              <v>bSync</v>
                              <v>eMode</v>
                              <v>bHold</v>
                              <v>stParams</v>
                            </l2>
                            <l2 n="Types" cet="String">
                              <v>LREAL</v>
                              <v>LREAL</v>
                              <v>LREAL</v>
                              <v>BOOL</v>
                              <v>E_CTRL_MODE</v>
                              <v>BOOL</v>
                              <v>ST_CTRL_PI_PARAMS[REF]</v>
                            </l2>
                          </o>
                          <o n="OutputParam" t="ParamList">
                            <l2 n="Names" cet="String">
                              <v>fOut</v>
                              <v>bARWactive</v>
                              <v>eState</v>
                              <v>eErrorId</v>
                              <v>bError</v>
                            </l2>
                            <l2 n="Types" cet="String">
                              <v>LREAL</v>
                              <v>BOOL</v>
                              <v>E_CTRL_STATE</v>
                              <v>E_CTRL_ERRORCODES</v>
                              <v>BOOL</v>
                            </l2>
                          </o>
                          <v n="CallType" t="Operator">FunctionBlock</v>
                          <n n="EN" />
                          <n n="ENO" />
                          <n n="STSnippet" />
                          <v n="ContainsExtensibleInputs">false</v>
                          <v n="ProvidesSTSnippet">false</v>
                          <v n="Id">3L</v>
                        </o>
                        <v n="Id">27L</v>
                      </o>
                    </l2>
                    <l2 n="Connectors" />
                    <v n="Id">1L</v>
                  </o>
                </l2>
                <v n="BranchCounter">1</v>
                <v n="ValidIds">true</v>
              </o>
            </Data>
            <TypeList>
              <Type n="Boolean">System.Boolean</Type>
              <Type n="BoxTreeAssign">{9873c309-1f09-4ebf-9078-42d8057ef11b}</Type>
              <Type n="BoxTreeBox">{acfc6f68-8e3a-4af5-bf81-3dd512095a46}</Type>
              <Type n="BoxTreeOperand">{9de7f100-1b87-424c-a62e-45b0cfc85ed2}</Type>
              <Type n="Flags">{668066f2-6069-46b3-8962-8db8d13d7db2}</Type>
              <Type n="Int32">System.Int32</Type>
              <Type n="Int64">System.Int64</Type>
              <Type n="Network">{d9a99d73-b633-47db-b876-a752acb25871}</Type>
              <Type n="NWLImplementationObject">{25e509de-33d4-4447-93f8-c9e4ea381c8b}</Type>
              <Type n="Operand">{c9b2f165-48a2-4a45-8326-3952d8a3d708}</Type>
              <Type n="Operator">{bffb3c53-f105-4e85-aba2-e30df579d75f}</Type>
              <Type n="OutputItemList">{f40d3e09-c02c-4522-a88c-dac23558cfc4}</Type>
              <Type n="ParamList">{71496971-9e0c-4677-a832-b9583b571130}</Type>
              <Type n="String">System.String</Type>
            </TypeList>
          </XmlArchive>
        </NWL>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>